// @dart=2.9

part of '../../main.dart';

class SyntaxHighlighting {
  static const List<String> keywords = [
    "abstract",
    "else",
    "import",
    "super",
    "as",
    "in",
    "switch",
    "assert",
    "export",
    "interface",
    "sync",
    "async",
    "extends",
    "is",
    "this",
    "await",
    "extension",
    "library",
    "throw",
    "break",
    "external",
    "mixin",
    "true",
    "case",
    "factory",
    "new",
    "try",
    "catch",
    "false",
    "null",
    "typedef",
    "on1",
    "finally",
    "operator",
    "continue",
    "for",
    "part",
    "while",
    "covarient",
    "Function",
    "rethrow",
    "with",
    "default",
    "get",
    "return",
    "yield",
    "deffered",
    "hide",
    "set",
    "do",
    "if",
    "show",
    "implements",
    "static",
  ];

  static const List<String> dataTypes = [
    "void",
    "int",
    "String",
    "dynamic",
    "enum",
    "final",
    "var",
    "const",
    "Map",
    "Set",
  ];

  static get codePatterns => {
        RegExp(r"\bmain\b(?<!\/\/.*)"): "main",
        RegExp(r'\".*\"(?<!\/\/.*)'): "quote",
        RegExp(r"\/\/.*"): "comment",
        RegExp(r"\/\*[\s\S]*?\*\/"): "comment",
        // RegExp(r"\b(0[xX][a-fA-F0-9]+|\d+)(?<!\/\/.*)\b"): "literal",
        RegExp(r"\b(" + keywords.join("|") + r")\b(?<!\/\/.*)"): "keyword",
        RegExp(r"\b(" + dataTypes.join("|") + r")\b(?<!\/\/.*)"): "data-type",
      };
}
